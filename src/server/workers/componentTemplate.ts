// src/server/workers/componentTemplate.ts
/**
 * Standard template for all Remotion components generated by the LLM
 * This ensures consistent structure, imports, and exports
 */

export const COMPONENT_TEMPLATE = `
// Component generated with Bazaar template - browser-compatible version

// Using globals provided by Remotion environment
const React = window.React;
const { 
  AbsoluteFill,
  useCurrentFrame,
  useVideoConfig,
  Sequence,
  interpolate,
  Easing
} = window.Remotion || {};

// Component implementation goes here
const {{COMPONENT_NAME}} = (props) => {
  const frame = useCurrentFrame();
  const { width, height, fps, durationInFrames } = useVideoConfig();
  
  // Animation Design Brief data is available in props.brief
  {{COMPONENT_IMPLEMENTATION}}
  
  return (
    <AbsoluteFill style={{ backgroundColor: 'transparent' }}>
      {{COMPONENT_RENDER}}
    </AbsoluteFill>
  );
};

export default {{COMPONENT_NAME}};
`;

/**
 * Apply the template to component implementation details
 * 
 * @param componentName Validated component name (CamelCase)
 * @param implementation Component implementation logic
 * @param render JSX render content
 * @returns Complete component code using the template
 */
export function applyComponentTemplate(
  componentName: string,
  implementation: string = '',
  render: string = '<div>Empty component</div>'
): string {
  return COMPONENT_TEMPLATE
    .replace(/{{COMPONENT_NAME}}/g, componentName)
    .replace('{{COMPONENT_IMPLEMENTATION}}', implementation)
    .replace('{{COMPONENT_RENDER}}', render);
}
